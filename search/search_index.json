{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Technology Innovation Center (TIC) at coMakeIT is a facility that enables exploration of new ideas, build technologies and solutions for its products and services. It helps the company to accelerate product development by laying down strong foundations through innovation. TIC primarily focuses on technology for the future, being ready to adapt to latest advancements in the software industry.</p>"},{"location":"#incubations","title":"Incubations","text":""},{"location":"#well-defined-architecture-wda","title":"Well-Defined Architecture (WDA)","text":"<p>Well-defined Architecture is a SaaS offering to generate boilerplate code of microservices, adhering to Well-defined design patterns. It also generates infrastructure automation scripts for provisioning and management of resources on cloud.</p>"},{"location":"#applications","title":"Applications","text":"<p>WDA generates well-architected Microservice Applications which are secure, reliable and flexible. These applications form the building blocks of your Microservice Architecture.</p>"},{"location":"#infrastructure","title":"Infrastructure","text":"<p>Having well-defined microservices alone isn't enough for the best performance, product experience and maintenance.</p>"},{"location":"#wdi","title":"WDI","text":"<p>To solve this problem, WDA also generates Infrastructure Automation (WDI). It provides a scalable and cost-effective platform for hosting the services.</p> <p>Click here to Explore our products!</p>"},{"location":"DevelopersGuide/Concept/","title":"Basic Concepts","text":"<p>CanvasToCode allows you to build a Well-Defined Architecture and Infrastructure using the information provided. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/","title":"Get Started","text":"<p>Welcome to the CanvasToCode! It's a powerful tool for planning your project architecture by visualizing the components of your application using draggable nodes and connecting edges. Follow these steps to effectively use the CanvasToCode:</p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#step-1-accessing-canvastocode","title":"Step 1: Accessing CanvasToCode","text":"<p>To get started, visit our website by Clicking here. You can access the CanvasToCode from the navigation bar and also from CanvasToCode button on home page by clicking on \"new\" from CanvasToCode dropdown. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#step-2-logging-in","title":"Step 2: Logging in","text":"<p>To save your projects for future refference, you need to log in. Click on the \"Login\" option.  If you don't have an account, you can create one by clicking on \"Register\" on the login page and then log in. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#step-3-get-started-with-canvastocode","title":"Step 3: Get Started with CanvasToCode","text":"<p>After navigating to CanvasToCode the canvas will open for you to start working on. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#step-4-adding-the-uigateway-node","title":"Step 4: Adding the UI+Gateway Node","text":"<p>The UI+Gateway node represents the frontend and gateway of your project. To add this node simply drag the node from sidebar and there can be only one node of this type, double click on it to open a modal and provide the necessary information. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#step-5-adding-service-nodes","title":"Step 5: Adding Service Nodes","text":"<p>Service nodes represent the microservices in your project. You can add multiple service nodes by drag and drop from sidebar, double-click on them to open modals and provide the required information. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#step-6-adding-other-components","title":"Step 6: Adding Other Components","text":"<p>In the sidebar, you'll find draggable nodes for various components such as the Auth Provider (Keycloak), Database (Postgres and MongoDB), Service Discovery (Eureka), and Log Management (ECK). Drag these nodes onto your CanvasToCode canvas to visualize the components in your project. Once added to the project these are applied for every node present on canvas. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#step-7-grouping","title":"Step 7: Grouping","text":"<p>In the side bar you can see node called a group, this is a re-sizable node which can be used to group your components for a clear picture. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#naming-group","title":"Naming Group","text":"<p>And you can also provide a name to the group, by double-click on the group node. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#step-8-creating-connections","title":"Step 8: Creating Connections","text":"<p>Nodes in the can be connected using edges. There are two types of connections you can create:</p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#database-connection","title":"Database Connection","text":"<p>Connect a Service or UI+Gateway node with a database node to associate the service with its corresponding database. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#interservice-communication","title":"Interservice Communication","text":"<p>Connect two service nodes to establish communication between them. Double click on an edge to define the type of communication. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#step-9-adding-colors","title":"Step 9: Adding Colors","text":"<p>You can differenciate nodes by adding different colors, to add a color just select the node and pick a color from the bottom of the pop-up. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#step-10-saving-your-project","title":"Step 10: Saving your Project","text":"<p>If you have login to the canvas, at the bottom of the sidebar there's a checkbox to save project. Check this box if you want to save your project details for future reference. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#accesing-saved-projects","title":"Accesing Saved Projects","text":"<p>You can view your previous projects from the existing projects option at canvasToCode dropdown. Don't forget to enter a project name in the input box at the top of the sidebar. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#step-11-moving-to-the-next-step","title":"Step 11: Moving to the Next Step","text":"<p>Once you've filled in all the necessary information and provided a project name, click on the \"Next\" button. A popup will appear, giving you the option to select a deployment infrastructure for your project.   select your option, fill in the details and click \"Submit.\" If you don't need a deployment infrastructure, simply click on the \"Skip\" button. </p>"},{"location":"DevelopersGuide/MindMap/GetStarted/#step-12-project-generation","title":"Step 12: Project Generation","text":"<p>Sit back and relax! We will generate a zip file for your project based on the information you provided. </p> <p>To know more and for detailed information of the options available you can refer Documentation We hope you find the CanvasToCode intuitive and helpful for planning and visualizing your project architecture. If you have any further questions or need assistance, please don't hesitate to reach out. </p>"},{"location":"Documentation/Localsetup/","title":"Local Setup","text":""},{"location":"Documentation/Localsetup/#follow-the-steps-to-setup-wda-in-your-local-machine","title":"Follow the steps to setup WDA in your local machine","text":""},{"location":"Documentation/Localsetup/#install-yeoman","title":"Install Yeoman","text":"<p><code>npm install -g yo</code></p>"},{"location":"Documentation/Localsetup/#jhipster","title":"Jhipster","text":"<p>github repository: generator-jhipster</p> <p><code>npm install &amp;&amp; npm link</code></p> <p>Verify installation using below commands</p> <p><code>jhipster --version</code></p> <p><code>jhipster --install-path</code></p>"},{"location":"Documentation/Localsetup/#wdi-tf","title":"WDI-TF","text":"<p>github repository: generator-tf-wdi</p> <p><code>npm i &amp;&amp; npm link</code></p> <p>Verify installation</p> <p>run <code>yo</code> command, Tf Wdi should be listed</p>"},{"location":"Documentation/Localsetup/#blueprints","title":"Blueprints","text":"<p>github repository: jhipster-blueprints</p> <p>go to generator-jhipster-gomicro</p> <p>update generator-jhipster dependency path in package.json to your local source directory</p> <p><code>npm install &amp;&amp; npm link</code></p> <p>Verification</p> <p><code>jhipster --blueprints go</code></p>"},{"location":"Documentation/Localsetup/#wda-server","title":"WDA Server","text":"<p>github repository: wda-server</p> <p><code>npm install &amp;&amp; npm start</code></p> <p>server will be accessible on http://localhost:3001</p> <p>health endpoint - http://localhost:3001/health</p>"},{"location":"Documentation/Localsetup/#wda-ui","title":"WDA UI","text":"<p>github repository: wda-ui</p> <p><code>npm install &amp;&amp; npm start</code></p> <p>server will be accessible on http://localhost:3000</p>"},{"location":"Documentation/concept/","title":"Architecture","text":""},{"location":"Documentation/concept/#well-defined-architecture","title":"Well Defined Architecture","text":"<p>WDA mainly comprises of two components, generator-jhipster and generator-tf-wdi.</p> <p>JHipster is a full-stack platform for developing modern web applications and microservices using Spring Boot and Angular or React. It provides a set of tools and features that help developers create applications quickly and efficiently.</p> <p>It is forked and extended for the capabilities envisioned for WDA.</p> <p>generator-tf-wdi is a component built to generate terraform automation for hosting the applications generated by generator-jhipster. Both components are developed using yeoman, a scaffolding framework. All the boilerplate code can be templatized and scaffolded with ease.</p> <p>References:</p> <ul> <li>JHipster</li> <li>Yeoman</li> </ul>"},{"location":"Documentation/MindMap/GlobalConfigurations/","title":"Global Configurations","text":"<p>When using the Mind Map Designer, you'll find different categories of draggable nodes in the sidebar. Each category represents a specific component or functionality that you can add to your Mind Map. Here's an overview of the different draggable nodes available</p>"},{"location":"Documentation/MindMap/GlobalConfigurations/#auth-provider","title":"Auth Provider","text":""},{"location":"Documentation/MindMap/GlobalConfigurations/#keycloak","title":"Keycloak","text":"<p>This node represents the authentication provider for your project. Dragging it onto the Mind Map allows you to incorporate Keycloak as the authentication service. </p>"},{"location":"Documentation/MindMap/GlobalConfigurations/#database","title":"Database","text":""},{"location":"Documentation/MindMap/GlobalConfigurations/#postgres","title":"Postgres","text":"<p>This node represents the Postgres database component. By adding it to your Mind Map, you can visualize and plan the usage of Postgres in your project.</p>"},{"location":"Documentation/MindMap/GlobalConfigurations/#mongodb","title":"MongoDB","text":"<p>This node represents the MongoDB database component. Dragging it onto your Mind Map helps you visualize and plan the integration of MongoDB in your project. </p>"},{"location":"Documentation/MindMap/GlobalConfigurations/#service-discovery","title":"Service Discovery","text":""},{"location":"Documentation/MindMap/GlobalConfigurations/#eureka","title":"Eureka","text":"<p>This node represents the Eureka service discovery component. By adding it to your Mind Map, you can visualize and plan how your services will register and discover each other using Eureka.</p>"},{"location":"Documentation/MindMap/GlobalConfigurations/#log-management","title":"Log Management","text":""},{"location":"Documentation/MindMap/GlobalConfigurations/#eck","title":"ECK","text":"<p>This node represents the Elastic Cloud on Kubernetes (ECK) log management component. Dragging it onto your Mind Map helps you visualize and plan how log management will be handled in your project.</p>"},{"location":"Documentation/MindMap/GlobalConfigurations/#adding-communication","title":"Adding Communication","text":"<p>To establish communication between services, follow these steps Drag a line from the output of the source node to the input of the destination node.Double click on the edge to define the type of communication and add a label.</p>"},{"location":"Documentation/MindMap/GlobalConfigurations/#metadata-and-saving","title":"Metadata and Saving","text":"<p>Use the following options to manage project metadata and saving</p>"},{"location":"Documentation/MindMap/GlobalConfigurations/#save-project-metadata","title":"Save project metadata","text":"<p>Check this box to save project details for future reference. </p>"},{"location":"Documentation/MindMap/GlobalConfigurations/#exsisting-projects","title":"Exsisting Projects","text":"<p>View your previous projects. </p>"},{"location":"Documentation/MindMap/GlobalConfigurations/#project-name","title":"Project Name","text":"<p>Enter a name for your project in the input box at the top of the sidebar. </p> <p>By utilizing these draggable nodes, establishing communication between services, and managing project metadata, you can effectively design and document your project architecture using the Mind Map Designer. </p>"},{"location":"Documentation/MindMap/Introduction/","title":"Introduction","text":"<p>The Mind Map Designer is an innovative tool designed to simplify the process of visualizing and planning your project architecture. With its intuitive interface, you can easily drag and drop nodes representing different components onto your Mind Map, creating a comprehensive overview of your project structure. </p> <p>Whether you're defining the frontend UI, configuring microservices, or integrating essential components like authentication providers, databases, service discovery, and log management, the Mind Map Designer has got you covered. Simply double-click on each node to input specific information and customize it according to your project requirements.</p> <p>Effortlessly establish communication between your services by adding edges, and define the communication type with a simple double-click. The Mind Map Designer empowers you to create clear and meaningful representations of how your project components interact and collaborate.</p> <p>To ensure seamless collaboration and future reference, the tool provides options for saving project metadata. By enabling the checkbox, you can conveniently store and access project details for later use. Additionally, the Projects tab allows you to view and manage your previous projects effortlessly.</p> <p>Once you've inputted all the necessary information and provided a project name, you can progress to the next step. A popup will appear, presenting you with the opportunity to select a deployment infrastructure for your project. Fill in the required details and submit your preferences. If you don't require a deployment infrastructure, you can easily skip this step.</p> <p>Finally, sit back and let the Mind Map Designer work its magic! It will generate a comprehensive zip file containing your project, encompassing all the configured components and communication details you've defined. Enjoy the streamlined and efficient project generation process facilitated by the Mind Map Designer.</p> <p>Experience the power of visualization and organization with the Mind Map Designer, making your project planning a breeze. Start using it today and witness the benefits of this user-friendly and feature-rich tool.</p>"},{"location":"Documentation/MindMap/Prerequisites/","title":"Prerequisites","text":"<p>These are the necessary requirements and conditions that must be in place before proceeding with WDA.</p>"},{"location":"Documentation/MindMap/Prerequisites/#1-if-the-framework-is-javago","title":"1. If the framework is java/go","text":"<p>Dependending on the your choice of framework, Make sure you have that installed to run the application.</p> <p>Install Java</p> <p>Install Go</p>"},{"location":"Documentation/MindMap/Prerequisites/#2-any-ide-of-user-chocie","title":"2. Any IDE of user chocie","text":"<pre><code>For Example:-\n\na Intellij\nb STS\nc Vscode\n</code></pre>"},{"location":"Documentation/MindMap/Prerequisites/#3-install-docker","title":"3. Install docker","text":"<p>By installing docker you can run the other services in container instead of installing in local.</p> <pre><code>Services Like the following can be run in container:\na DataBase\nb keycloak\nc Jhispter registry(Eureka)\n</code></pre> <p>To install Docker:</p> <p>Install Docker From Here..!</p> <p>The user can also opt for the deployment at the WDA as well, in such case:</p> <pre><code>There will be some pre requisite of WDI:\n\n    1 Terraform\n\n    2 kubectl\n\n    3 aws-cli\n</code></pre>"},{"location":"Documentation/MindMap/Prerequisites/#4-to-push-the-docker-image-to-ecr-repository","title":"4. To push the docker image to ECR repository","text":"<p>You would require a AWS cli, to configure reffer the below link.</p> <p>Configure AWS CLI</p>"},{"location":"Documentation/MindMap/Projectstructure/","title":"Project Structure","text":"<p>The structure of the project folder depends on whether you have selected a deployment infrastructure or not. Let's explore both scenarios</p>"},{"location":"Documentation/MindMap/Projectstructure/#scenario-1-no-deployment-infrastructure-selected","title":"Scenario 1: No Deployment Infrastructure Selected","text":"<p>If you generated your project folder without selecting any deployment infrastructure, the folder structure will look as follows</p> <pre><code>.\n\u251c\u2500 {Client}\n\u251c\u2500 {Backend}\n\u251c\u2500 {Caller}\n\u2514\u2500  Blueprints\n</code></pre> <p>In this scenario, the folder contains the following elements</p>"},{"location":"Documentation/MindMap/Projectstructure/#client","title":"Client","text":"<p>This folder represents the client-side codebase of your project.</p>"},{"location":"Documentation/MindMap/Projectstructure/#backend","title":"Backend","text":"<p>This folder represents the backend codebase of your project.</p>"},{"location":"Documentation/MindMap/Projectstructure/#caller","title":"Caller","text":"<p>This folder represents the caller service codebase of your project.</p>"},{"location":"Documentation/MindMap/Projectstructure/#blueprints","title":"Blueprints","text":"<p>This folder contains two files a .json file and a .jdl file. These files define the architecture and structure of your project.</p>"},{"location":"Documentation/MindMap/Projectstructure/#scenario-2-deployment-infrastructure-selected","title":"Scenario 2: Deployment Infrastructure Selected","text":"<p>If you generated your project folder after selecting a deployment infrastructure, the folder structure will include additional folders for deployment manifests. The structure will look as follows</p> <pre><code>.\n\u251c\u2500 {Client}\n\u251c\u2500 {Backend}\n\u251c\u2500 {Caller}\n\u251c\u2500 Blueprints\n\u251c\u2500 Kubernetes\n\u2514\u2500 Terraform\n</code></pre> <p>In this scenario, the folder contains the following elements</p>"},{"location":"Documentation/MindMap/Projectstructure/#client_1","title":"Client","text":"<p>This folder represents the client-side codebase of your project.</p>"},{"location":"Documentation/MindMap/Projectstructure/#backend_1","title":"Backend","text":"<p>This folder represents the backend codebase of your project.</p>"},{"location":"Documentation/MindMap/Projectstructure/#caller_1","title":"Caller","text":"<p>This folder represents the caller service codebase of your project.</p>"},{"location":"Documentation/MindMap/Projectstructure/#blueprints_1","title":"Blueprints","text":"<p>This folder contains the architecture definition files (json and jdl) for your project.</p>"},{"location":"Documentation/MindMap/Projectstructure/#kubernetes","title":"Kubernetes","text":"<p>This folder contains application deployment manifest files for Kubernetes infrastructure.</p>"},{"location":"Documentation/MindMap/Projectstructure/#terraform","title":"Terraform","text":"<p>This folder contains infrastructure deployment manifest files for Terraform.</p> <p>In these structures defined, {Client} represents the folder name chosen by the user for their UI+gateway service, {Backend} represents the folder name for the microservice, and {Caller} represents the folder name for another microservice. These placeholders indicate that the actual folder names will depend on the specific names provided by the user during the project setup. Please note that the actual names and contents of the folders may vary based on your specific project configuration. The provided structure serves as a general guideline for understanding the folder layout.</p>"},{"location":"Documentation/MindMap/ServiceNode/","title":"Service Node","text":"<p>When working with the Service Nodes in the Mind Map Designer, you can add multiple nodes to represent the microservices in your project. Here's an explanation of the fields that you see when double-click on a service node.</p>"},{"location":"Documentation/MindMap/ServiceNode/#available-service-configuration-options","title":"Available Service configuration options","text":"Option name Default value Possible values Comment Application Framework java java, Go PackageName com.mycompany.myapp Sets the packageFolder option ServerPort 9000 8080, 8081 or 9999 Depends on the app type"},{"location":"Documentation/MindMap/ServiceNode/#application-name","title":"Application Name:","text":"<p>Enter a descriptive name for the microservice. This name should reflect the specific functionality or purpose of the microservice within your project. It helps in identifying and differentiating between different microservices.</p>"},{"location":"Documentation/MindMap/ServiceNode/#application-framework","title":"Application Framework:","text":"<p>Specify the framework you will be using to develop the microservice. This could be any programming language or framework that is suitable for building the backend logic of your microservice. For example, you might use Spring Boot, Node.js, Django, or Flask.</p>"},{"location":"Documentation/MindMap/ServiceNode/#package-name","title":"Package Name:","text":"<p>Provide the package name for the microservice. The package name is used for organizing the code files and classes related to the microservice. It helps maintain a structured codebase and avoids naming conflicts within your project. It is typically written in the format of reversed domain name, such as com.example.microservice.</p>"},{"location":"Documentation/MindMap/ServiceNode/#server-port","title":"Server Port:","text":"<p>Specify the port number on which the microservice will be running. This port number is used to access the microservice through the network. Each microservice should have a unique port number to avoid conflicts. Commonly used port numbers are in the range of 8000 to 8080, but you can choose any available port as per your project's requirements.</p> <p>By providing these details for each service node, you can effectively define and organize the microservices within your project in the Mind Map Designer.</p>"},{"location":"Documentation/MindMap/UIandGateway/","title":"UI+Gateway Node","text":"<p>The UI+Gateway node in the Mind Map Designer represents the frontend and gateway of your project. It serves as the entry point for user interaction and handles the communication between the user interface and the backend services. By double-clicking on the UI+Gateway node, you can open a modal that allows you to provide specific information about this node.</p> <p>Here is more information about data that need to provide:</p>"},{"location":"Documentation/MindMap/UIandGateway/#available-application-configuration-options","title":"Available application configuration options","text":"Option name Default value Possible values Comment ClientFramework react angularX, angular, react, vue, svelte, no PackageName com.mycompany.myapp Sets the packageFolder option ServerPort 9000 8080, 8081 or 9999 Depends on the app type <p>Please provide us with the following details:</p>"},{"location":"Documentation/MindMap/UIandGateway/#package-name","title":"Package Name","text":"<p>Please provide us with the unique package name for your application. This name should follow the standard Java package naming conventions and should be unique to your application.</p>"},{"location":"Documentation/MindMap/UIandGateway/#client-framework","title":"Client Framework","text":"<p>Please specify the client framework that your application will use. Possible values include \"Angular,\" \"React,\" \"Vue.js,\" and more.</p>"},{"location":"Documentation/MindMap/UIandGateway/#server-port","title":"Server Port","text":"<p>Please specify the port that your application will use for its services.</p> <p>It's important to note that the Mind Map Designer allows only one UI+Gateway node in your Mind Map. This restriction ensures clarity and prevents confusion by having a single entry point for your application's frontend and gateway functionality.</p> <p>By providing these details for the UI+Gateway node, you can accurately represent and document the frontend + gateway aspects of your project within the Mind Map. This information will help you visualize the overall architecture and plan the integration with other components in your Mind Map.</p>"},{"location":"Documentation/WDA/Application/","title":"Application","text":"<p>To define your application in our system, we require specific information about your application's characteristics. </p>"},{"location":"Documentation/WDA/Application/#available-application-configuration-options","title":"Available application configuration options","text":"Option name Default value Possible values Comment ApplicationType Gateway monolith, microservice, gateway AuthenticationType oauth2 jwt, session, oauth2 jwt ClientFramework react angularX, angular, react, vue, svelte, no DatabaseType sql sql, mongodb, cassandra, couchbase, no PackageName com.mycompany.myapp Sets the packageFolder option ProdDatabaseType postgresql mysql, mariadb, mssql, postgresql, oracle, no ServerPort 9000 8080, 8081 or 9999 Depends on the app type ServiceDiscoveryType eureka eureka, consul, no <p>Please provide us with the following details:</p>"},{"location":"Documentation/WDA/Application/#application-type","title":"Application Type","text":"<p>Please specify the type of application you are building. For instance, if your application requires integration with other applications or systems, you may select \"Gateway\". If you are building a other application, you may select \"Microservices\".</p>"},{"location":"Documentation/WDA/Application/#package-name","title":"Package Name","text":"<p>Please provide us with the unique package name for your application. This name should follow the standard Java package naming conventions and should be unique to your application.</p>"},{"location":"Documentation/WDA/Application/#authentication-type","title":"Authentication Type","text":"<p>Please select the type of authentication that your application will use. Possible values include \"JWT authentication,\" \"Session-based authentication,\" and \"OAuth 2.0 authentication.\" </p>"},{"location":"Documentation/WDA/Application/#database-type","title":"Database Type","text":"<p>Please specify the type of database that your application will use. Possible values include \"SQL,\" \"Mongodb,\" \"Couchbase,\" and \"casandra.\" Simply select \"No\" if You have used none.</p>"},{"location":"Documentation/WDA/Application/#production-database-type","title":"Production Database Type","text":"<p>Please specify the type of database that will be used for production. This may differ from the database type selected in step 4. If you have selected \"SQL\" in step 4, please specify the specific database management system you plan to use for production. For example, you may select \"MySQL\" as your production database type.</p>"},{"location":"Documentation/WDA/Application/#client-framework","title":"Client Framework","text":"<p>Please specify the client framework that your application will use. Possible values include \"Angular,\" \"React,\" \"Vue.js,\" and more.</p>"},{"location":"Documentation/WDA/Application/#service-discovery-type","title":"Service Discovery Type","text":"<p>Please specify the service discovery type that your application will use. Possible values include \"Eureka,\" \"Zookeeper,\" \"Consul,\" and more.</p>"},{"location":"Documentation/WDA/Application/#service-port","title":"Service Port","text":"<p>Please specify the port that your application will use for its services. By providing us with these details, we can create a comprehensive profile for your application, which will help us ensure that your application is properly configured and optimized for success.</p>"},{"location":"Documentation/WDA/Communication/","title":"Communication","text":"<p>Communication tab requires information, which would specify which client and server would communicate with each other. For better understanding here is an example:</p> <p>Assume you have client named \"Fe\" and Server named as \"be1\" &amp; another as \"be2\", and you want to establish communication between \"Fe\" and \"be1\". so, for Client Name you would mention \"Fe\" and for Server Name you would mention \"be1\".</p>"},{"location":"Documentation/WDA/Deployment/","title":"Deployment","text":"<p>Deployment information is about how you would like to deploy your application.</p>"},{"location":"Documentation/WDA/Deployment/#available-deployment-options","title":"Available Deployment Options","text":"<p>Here are the deployment options supported:</p> Option name Default value Possible values Comment DeploymentType docker-compose docker-compose, kubernetes, openshift AppsFolders [] Directory names for the applications separated by comma. Must be a list, example [foo, bar] Monitoring no no, prometheus ServiceDiscoveryType eureka eureka, consul, no DockerRepositoryName The name or URL of the docker repository. Must be in double quotes KubernetesNamespace default Applicable only when deploymentType is kubernetes KubernetesUseDynamicStorage false true, false Applicable only when deploymentType is kubernetes, enables the kubernetesStorageClassName option KubernetesServiceType LoadBalancer LoadBalancer, NodePort, Ingress Applicable only when deploymentType is kubernetes IngressDomain The domain for Ingress when kubernetesServiceType is <code>Ingress</code>. Must be in double quotes. Applicable only when deploymentType is kubernetes IngressType nginx nginx, gke The kubernetes ingress type, only set when <code>kubernetesServiceType</code> is set to Ingress <p>During deployment, you will be prompted to provide the following information:</p>"},{"location":"Documentation/WDA/Deployment/#deployment-type","title":"Deployment Type","text":"<p>The deployment type you want to use, in this case Kubernetes.</p>"},{"location":"Documentation/WDA/Deployment/#application-folders","title":"Application Folders","text":"<p>The folder(s) containing your application code.</p>"},{"location":"Documentation/WDA/Deployment/#docker-repository-name","title":"Docker Repository Name","text":"<p>The name of the Docker repository you want to use for your container images.</p>"},{"location":"Documentation/WDA/Deployment/#kubernetes-namespace","title":"Kubernetes Namespace","text":"<p>The Kubernetes namespace you want to use for your deployment.</p>"},{"location":"Documentation/WDA/Deployment/#enable-kubernetes-dynamic-storage","title":"Enable Kubernetes Dynamic Storage","text":"<p>Whether to use dynamic storage provisioning in Kubernetes (set to Yes or No).</p>"},{"location":"Documentation/WDA/Deployment/#kubernetes-storage-provisioner","title":"Kubernetes Storage Provisioner","text":"<p>The storage provisioner to use for dynamic storage provisioning in Kubernetes.</p>"},{"location":"Documentation/WDA/Deployment/#ingress-domain","title":"Ingress Domain","text":"<p>The domain name to use for your Ingress resource.</p>"},{"location":"Documentation/WDA/Deployment/#ingress-type","title":"Ingress Type","text":"<p>The type of Ingress controller you want to use, such as Nginx.</p>"},{"location":"Documentation/WDA/Deployment/#service-discovery-type","title":"Service Discovery Type","text":"<p>The service discovery type you want to use, such as Eureka.</p>"},{"location":"Documentation/WDA/Prerequisites/","title":"Prerequisites-WDA","text":"<p>\"Before you begin with WDA, there are certain prerequisites that must be met to ensure a successful outcome. These prerequisites are the necessary requirements and conditions that must be in place before proceeding with WDA.</p>"},{"location":"Documentation/WDA/Prerequisites/#1-if-the-framework-is-javago","title":"1. If the framework is java/go","text":"<p>Dependending on the your choice of framework, Make sure you have that installed to run the application.</p> <p>InstallJava</p> <p>Install Go</p>"},{"location":"Documentation/WDA/Prerequisites/#2-any-ide-of-user-chocie","title":"2. Any IDE of user chocie","text":"<pre><code>For Example:-\n\na Intellij\nb STS\nc Vscode\n</code></pre>"},{"location":"Documentation/WDA/Prerequisites/#3-install-docker","title":"3. Install docker","text":"<p>By installing docker you can run the other services in container instead of installing in local.</p> <pre><code>Services Like the following can be run in container:\na DataBase\nb keycloak\nc Jhispter registry(Eureka)\n</code></pre> <p>To install Docker:</p> <p>Install Docker From Here..!</p> <p>The user can also opt for the deployment at the WDA as well, in such case:</p> <pre><code>There will be some pre requisite of WDI:\n\n    1 Terraform\n\n    2 kubectl\n\n    3 aws-cli\n</code></pre>"},{"location":"Documentation/WDA/Prerequisites/#4-to-push-the-docker-image-to-ecr-repository","title":"4. To push the docker image to ECR repository","text":"<p>You would require a AWS cli, to configure reffer the below link.</p> <p>Configure AWS cli</p>"},{"location":"Documentation/WDA/WDA/","title":"Description","text":"<p>A well-defined architecture is a clear and documented framework that outlines the components and their interactions in a system.</p> <p>To obtain a WDA (Well-Defined Architecture) for your application, you will need to provide detailed information about the application and deployment. </p> <p>Firstly, you will need to provide information about your application. This information will help us understand the context in which your WDA will be used and ensure that it is aligned with your business objectives.</p> <p>You will need to provide information about the deployment environment, including the hardware, software, and network infrastructure that will be used to host your WDA. This information will help us ensure that your architecture is properly configured and optimized for performance, security, and scalability.</p> <p>To provide you with a better understanding, we have given more detailed information and  the possible values of the three parameters, namely application, communication and deployment. By understanding the range of possible values for each of these parameters, we can ensure that our response is accurate and comprehensive.</p>"},{"location":"Documentation/WDI/Prerequisites/","title":"Prerequisites-WDI","text":"<p>Before getting started with WDI, there are some prerequisites to ensure the correct outcome:</p>"},{"location":"Documentation/WDI/Prerequisites/#1-terraform","title":"1 . Terraform","text":"<p>Terraform is an open-source infrastructure as code (IaC) tool that allows you to define and manage your infrastructure in a declarative way. With Terraform, you can automate the provisioning, configuration, and deployment of infrastructure across multiple cloud providers and on-premises data centers.</p> <p>Install Terraform</p>"},{"location":"Documentation/WDI/Prerequisites/#2-kubectlkubernetes-command-line-tool","title":"2 . Kubectl(Kubernetes command-line tool)","text":"<p>The Kubernetes command-line tool, kubectl, allows you to run commands against Kubernetes clusters. You can use kubectl to deploy applications, inspect and manage cluster resources, and view logs.</p> <p>Install Kubectl</p>"},{"location":"Documentation/WDI/Prerequisites/#3-cloud-provider","title":"3 . Cloud Provider","text":"<p>An active cloud provider account to which the infrastructure will be deployed.</p> <pre><code>(As of now for use it's AWS)\n</code></pre>"},{"location":"Documentation/WDI/WDI/","title":"Description","text":"<p>To define the Infrastructure for your project, we require some details that will help us create a Well Defined Infrastructure (WDI). The information needed includes the project name, your domain name, your preferred cloud provider, your preferred orchestration provider, cluster name, Kubernetes namespace, monitoring and the ingress type.</p> <p>The project name will be the name of your project, and the domain name will be the domain name for your application. You will also need to select your preferred cloud provider, which is where your application will be hosted. We currently support AWS Cloud, Azure Cloud and Google cloud platform.</p> <p>For orchestration, we support Kubernetes, Docker Swarm, Apache MESOS and you will need to provide a cluster name and a Kubernetes namespace. </p> <p>Additionally, you will need to select your preferred ingress type, which can be either Istio, Traefix or Nginx. With this information, we will create a WDI that will allow you to deploy and run your application with ease.</p>"}]}